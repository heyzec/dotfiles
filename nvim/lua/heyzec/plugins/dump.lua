return {

  -- NOTE: Plugins can specify dependencies.
  --
  -- The dependencies are proper plugin specifications as well - anything
  -- you do for a plugin at the top level, you can do for a dependency.
  --
  -- Use the `dependencies` key to specify the dependencies of a particular plugin

  --     -- Diagnostic Config
  --     -- See :help vim.diagnostic.Opts
  --     vim.diagnostic.config {
  --       severity_sort = true,
  --       float = { border = 'rounded', source = 'if_many' },
  --       underline = { severity = vim.diagnostic.severity.ERROR },
  --       signs = vim.g.have_nerd_font and {
  --         text = {
  --           [vim.diagnostic.severity.ERROR] = '󰅚 ',
  --           [vim.diagnostic.severity.WARN] = '󰀪 ',
  --           [vim.diagnostic.severity.INFO] = '󰋽 ',
  --           [vim.diagnostic.severity.HINT] = '󰌶 ',
  --         },
  --       } or {},
  --       virtual_text = {
  --         source = 'if_many',
  --         spacing = 2,
  --         format = function(diagnostic)
  --           local diagnostic_message = {
  --             [vim.diagnostic.severity.ERROR] = diagnostic.message,
  --             [vim.diagnostic.severity.WARN] = diagnostic.message,
  --             [vim.diagnostic.severity.INFO] = diagnostic.message,
  --             [vim.diagnostic.severity.HINT] = diagnostic.message,
  --           }
  --           return diagnostic_message[diagnostic.severity]
  --         end,
  --       },
  --     }

  -- LSP Plugins
  -- {
  --   -- `lazydev` configures Lua LSP for your Neovim config, runtime and plugins
  --   -- used for completion, annotations and signatures of Neovim apis
  --   'folke/lazydev.nvim',
  --   ft = 'lua',
  --   opts = {
  --     library = {
  --       -- Load luvit types when the `vim.uv` word is found
  --       { path = '${3rd}/luv/library', words = { 'vim%.uv' } },
  --     },
  --   },
  -- },
  -- {
  --   -- Main LSP Configuration
  --   'neovim/nvim-lspconfig',
  --   dependencies = {
  --     -- Automatically install LSPs and related tools to stdpath for Neovim
  --     -- Mason must be loaded before its dependents so we need to set it up here.
  --     -- NOTE: `opts = {}` is the same as calling `require('mason').setup({})`
  --     { 'williamboman/mason.nvim', opts = {} },
  --     'williamboman/mason-lspconfig.nvim',
  --     'WhoIsSethDaniel/mason-tool-installer.nvim',
  --
  --     -- Useful status updates for LSP.
  --     { 'j-hui/fidget.nvim', opts = {} },
  --
  --     -- Allows extra capabilities provided by blink.cmp
  --     'saghen/blink.cmp',
  --   },
  -- },

  -- require 'kickstart.plugins.debug',
  -- require 'kickstart.plugins.indent_line',
  -- require 'kickstart.plugins.lint',
  -- require 'kickstart.plugins.autopairs',
  -- require 'kickstart.plugins.neo-tree',
  -- require 'kickstart.plugins.gitsigns', -- adds gitsigns recommend keymaps
}
