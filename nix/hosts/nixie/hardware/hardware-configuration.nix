# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/3255e57d-d808-4311-b7cb-3dc73b49d778";
      fsType = "btrfs";
      options = [ "subvol=@root" ];
    };

  fileSystems."/var/lib/docker/btrfs" =
    { device = "/@root/@/var/lib/docker/btrfs";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/mnt/root" =
    { device = "/dev/disk/by-uuid/3255e57d-d808-4311-b7cb-3dc73b49d778";
      fsType = "btrfs";
    };

  fileSystems."/home/heyzec" =
    { device = "/dev/disk/by-uuid/3255e57d-d808-4311-b7cb-3dc73b49d778";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/623B-1AB3";
      fsType = "vfat";
    };

  fileSystems."/efi" =
    { device = "/boot";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/mnt/D" =
    { device = "/dev/disk/by-uuid/b45111a4-a9e1-4453-bc1d-ae89725a8c59";
      fsType = "btrfs";
    };

  fileSystems."/media/D" =
    { device = "/dev/disk/by-uuid/b45111a4-a9e1-4453-bc1d-ae89725a8c59";
      fsType = "btrfs";
      options = [ "subvol=@data" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/ff395ff8-bad9-4194-a884-3ddda7014dd3"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s13f0u3u2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
