{
  pkgs,
  config,
  ...
}: let
  # We source the bulk of the config so that changes can be made without a rebuild
  main-config-path = "$HOME/dotfiles/desktop/hypr/hyprland.conf";
  colors-config-path = "$HOME/dotfiles/desktop/hypr/colors.conf"; # Was autogenerated by nix
in {
  # Enable configuring by home-manager, but program itself is made available by NixOS
  # Don't use wayland.windowManager.hyprland module, otherwise hyprland version may be incompatible with newer NixOS
  # (e.g. crash bug when home profile accidentally not updated)
  wayland.windowManager.hyprland = {
    enable = true;
  };
  home.file.".config/test" = {
    text = ''
      test
    '';
  };
  xdg.configFile."hypr/hyprland.conf" = {
    text = ''
      # This line is what wayland.windowManager.hyprland module would generate
      exec-once = dbus-update-activation-environment --systemd DISPLAY HYPRLAND_INSTANCE_SIGNATURE WAYLAND_DISPLAY XDG_CURRENT_DESKTOP && systemctl --user stop hyprland-session.target && systemctl --user start hyprland-session.target

      source=${colors-config-path}
      source=${main-config-path}
      exec-once=hyprctl setcursor ${config.home.pointerCursor.name} ${toString config.home.pointerCursor.size}
    '';
  };

  # nm-applet provides auth dialogs to manage wired and wireless networks
  services.network-manager-applet.enable = true;
  services.wob.enable = true;
  services.cliphist = {
    enable = true;
    allowImages = true;
  };
  services.gnome-keyring = {
    enable = true;
    components = ["pkcs11" "secrets" "ssh"];
  };
  services.ssh-agent.enable = true;

  systemd.user.services.indicator-sound-switcher = {
    Unit = {
      Description = "Sound input/output tray applet";
      After = ["graphical-session.target"];
      PartOf = ["graphical-session.target"];
    };

    Service = {
      Type = "simple";
      ExecStart = "${pkgs.indicator-sound-switcher}/bin/indicator-sound-switcher";
      Restart = "on-failure";
    };

    Install = {
      WantedBy = ["graphical-session.target"];
    };
  };

  # SWHKD
  # # swhkd, the shortcut mapper
  # exec-once = swhks
  # # For some reason this will not work if we do not redirect output
  # exec-once = pkexec swhkd -c "$HOME"/.config/swhkd/swhkdrc --device "keyd virtual keyboard" >/dev/null
  systemd.user.services.swhkd = let
    # Adopted from https://github.com/waycrate/swhkd/tree/main/contrib/init/systemd
    hotkeys = pkgs.writeShellScript "hotkeys.sh" ''
      killall swhks
      swhks & pkexec swhkd -c "''${HOME}/.config/swhkd/swhkdrc" --device "keyd virtual keyboard"
    '';
  in {
    Unit = {
      Description = "swhkd hotkey daemon";
      After = ["graphical-session.target"];
      PartOf = ["graphical-session.target"];
    };

    Service = {
      Type = "simple";
      ExecStart = "${hotkeys}";
      Restart = "on-failure";
    };

    Install = {
      WantedBy = ["graphical-session.target"];
    };
  };

  # There are many wallpaper setters, but hyprpaper is the only one with a configurable HM module
  services.hyprpaper = let
    image = "$HOME/Pictures/Wallpapers/wallpaper";
  in {
    enable = true;
    settings = {
      preload = [image];
      wallpaper = [",${image}"];
    };
  };

  services.hypridle.enable = true;

  systemd.user.services.wl-clip-persist = {
    Unit = {
      Description = "Keep Wayland clipboard even after programs close";
      After = ["graphical-session.target"];
      PartOf = ["graphical-session.target"];
    };

    Service = {
      Type = "simple";
      # Don't use primary keyboard, only regular
      # https://github.com/Linus789/wl-clip-persist/issues/3
      ExecStart = "${pkgs.wl-clip-persist}/bin/wl-clip-persist --clipboard regular";
      Restart = "on-failure";
    };

    Install = {
      WantedBy = ["graphical-session.target"];
    };
  };
}
